{
  "root": true,
  "extends": ["prettier"],
  "plugins": [
    "jest",
    "import",
    "compat",
    "jest-formatting",
    "eslint-comments",
    "@typescript-eslint"
  ],
  "env": {
    "es6": true,
    "jest": true,
    "node": true,
    "browser": true,
    "jest/globals": true
  },
  "settings": {
    "polyfills": ["external"],
    "import/extensions": [".js", ".ts", ".d.ts"],
    "import/external-module-folders": ["node_modules", "node_modules/@types"],
    "import/parsers": {
      "@typescript-eslint/parser": [".js", ".ts", ".d.ts"]
    },
    "import/resolver": {
      "node": {
        "extensions": [".js", ".ts", ".d.ts"]
      }
    }
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2018,
    "sourceType": "module",
    "project": "./tsconfig.eslint.json"
  },
  "rules": {
    // typescript
    "@typescript-eslint/adjacent-overload-signatures": "error",
    "@typescript-eslint/array-type": [
      "error",
      {
        "default": "array-simple",
        "readonly": "array-simple"
      }
    ],
    "@typescript-eslint/await-thenable": "error",
    "@typescript-eslint/ban-ts-comment": "off",
    "@typescript-eslint/ban-tslint-comment": "error",
    "@typescript-eslint/ban-types": "error",
    "@typescript-eslint/class-literal-property-style": ["error", "fields"],
    "@typescript-eslint/consistent-indexed-object-style": ["error", "record"],
    "@typescript-eslint/consistent-type-assertions": [
      "error",
      {
        "assertionStyle": "as",
        "objectLiteralTypeAssertions": "allow-as-parameter"
      }
    ],
    "@typescript-eslint/consistent-type-definitions": ["error", "interface"],
    "@typescript-eslint/consistent-type-exports": "error",
    "@typescript-eslint/consistent-type-imports": ["error", { "prefer": "type-imports" }],
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-member-accessibility": [
      "error",
      {
        "accessibility": "explicit",
        "overrides": { "constructors": "no-public" }
      }
    ],
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/member-delimiter-style": [
      "error",
      {
        "multiline": { "delimiter": "semi", "requireLast": true },
        "singleline": { "delimiter": "semi", "requireLast": false }
      }
    ],
    "@typescript-eslint/member-ordering": [
      "error",
      {
        "default": {
          "memberTypes": [
            "signature",
            "public-static-field",
            "protected-static-field",
            "private-static-field",
            "public-instance-field",
            "protected-instance-field",
            "private-instance-field",
            "public-abstract-field",
            "protected-abstract-field",
            "private-abstract-field",

            "public-constructor",
            "protected-constructor",
            "private-constructor",

            "public-static-method",
            "protected-static-method",
            "private-static-method",
            "public-instance-method",
            "protected-instance-method",
            "private-instance-method",
            "public-abstract-method",
            "protected-abstract-method",
            "private-abstract-method"
          ],
          "order": "as-written"
        },
        "interfaces": {
          "memberTypes": ["signature", "field", "constructor", "method"],
          "order": "alphabetically"
        },
        "typeLiterals": {
          "memberTypes": ["signature", "field", "constructor", "method"],
          "order": "alphabetically"
        }
      }
    ],
    "@typescript-eslint/method-signature-style": ["error", "property"],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "default",
        "format": ["camelCase"]
      },
      {
        "selector": ["variableLike", "property", "parameterProperty"],
        "format": ["camelCase", "PascalCase"]
      },
      {
        "selector": "variable",
        "format": ["camelCase", "PascalCase", "UPPER_CASE"]
      },
      {
        "selector": "parameter",
        "modifiers": ["unused"],
        "format": ["camelCase", "PascalCase"],
        "leadingUnderscore": "allowSingleOrDouble"
      },
      {
        "selector": ["objectLiteralProperty", "typeProperty"],
        "format": ["camelCase", "PascalCase", "snake_case"],
        "leadingUnderscore": "allowSingleOrDouble"
      },
      {
        "selector": ["objectLiteralProperty", "typeProperty"],
        "format": null,
        "modifiers": ["requiresQuotes"]
      },
      {
        "selector": "typeLike",
        "format": ["PascalCase"]
      },
      {
        "selector": "enumMember",
        "format": ["PascalCase", "UPPER_CASE"]
      }
    ],
    "@typescript-eslint/no-base-to-string": "error",
    "@typescript-eslint/no-confusing-non-null-assertion": "error",
    "@typescript-eslint/no-confusing-void-expression": "error",
    "@typescript-eslint/no-dynamic-delete": "off",
    "@typescript-eslint/no-empty-interface": "error",
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-extra-non-null-assertion": "error",
    "@typescript-eslint/no-extraneous-class": "error",
    "@typescript-eslint/no-floating-promises": "off",
    "@typescript-eslint/no-for-in-array": "error",
    "@typescript-eslint/no-implied-eval": "error",
    "@typescript-eslint/no-inferrable-types": "error",
    "@typescript-eslint/no-invalid-void-type": [
      "error",
      {
        "allowInGenericTypeArguments": true
      }
    ],
    "@typescript-eslint/no-meaningless-void-operator": "error",
    "@typescript-eslint/no-misused-new": "error",
    "@typescript-eslint/no-misused-promises": "error",
    "@typescript-eslint/no-namespace": "error",
    "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "error",
    "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
    "@typescript-eslint/no-non-null-assertion": "error",
    "@typescript-eslint/no-parameter-properties": "off",
    "@typescript-eslint/no-require-imports": "error",
    "@typescript-eslint/no-this-alias": "error",
    "@typescript-eslint/no-throw-literal": "error",
    "@typescript-eslint/no-type-alias": "off",
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
    "@typescript-eslint/no-unnecessary-condition": "error",
    "@typescript-eslint/no-unnecessary-qualifier": "error",
    "@typescript-eslint/no-unnecessary-type-arguments": "error",
    "@typescript-eslint/no-unnecessary-type-assertion": "error",
    "@typescript-eslint/no-unnecessary-type-constraint": "off",
    "@typescript-eslint/no-unsafe-argument": "error",
    "@typescript-eslint/no-unsafe-assignment": "error",
    "@typescript-eslint/no-unsafe-call": "error",
    "@typescript-eslint/no-unsafe-member-access": "error",
    "@typescript-eslint/no-unsafe-return": "error",
    "@typescript-eslint/no-var-requires": "error",
    "@typescript-eslint/non-nullable-type-assertion-style": "error",
    "@typescript-eslint/prefer-as-const": "error",
    "@typescript-eslint/prefer-enum-initializers": "off",
    "@typescript-eslint/prefer-for-of": "error",
    "@typescript-eslint/prefer-function-type": "error",
    "@typescript-eslint/prefer-includes": "off",
    "@typescript-eslint/prefer-literal-enum-member": "error",
    "@typescript-eslint/prefer-namespace-keyword": "error",
    "@typescript-eslint/prefer-nullish-coalescing": [
      "error",
      {
        "ignoreConditionalTests": true,
        "ignoreMixedLogicalExpressions": true
      }
    ],
    "@typescript-eslint/prefer-optional-chain": "error",
    "@typescript-eslint/prefer-readonly": "error",
    "@typescript-eslint/prefer-readonly-parameter-types": "off",
    "@typescript-eslint/prefer-reduce-type-parameter": "error",
    "@typescript-eslint/prefer-regexp-exec": "error",
    "@typescript-eslint/prefer-return-this-type": "error",
    "@typescript-eslint/prefer-string-starts-ends-with": "off",
    "@typescript-eslint/prefer-ts-expect-error": "error",
    "@typescript-eslint/promise-function-async": "off",
    "@typescript-eslint/require-array-sort-compare": [
      "error",
      {
        "ignoreStringArrays": true
      }
    ],
    "@typescript-eslint/restrict-plus-operands": [
      "error",
      {
        "checkCompoundAssignments": true
      }
    ],
    "@typescript-eslint/restrict-template-expressions": "error",
    "@typescript-eslint/sort-type-union-intersection-members": "error",
    "@typescript-eslint/strict-boolean-expressions": "off",
    "@typescript-eslint/switch-exhaustiveness-check": "off",
    "@typescript-eslint/triple-slash-reference": [
      "error",
      {
        "path": "never",
        "types": "never",
        "lib": "never"
      }
    ],
    "@typescript-eslint/type-annotation-spacing": "error",
    "@typescript-eslint/typedef": "off",
    "@typescript-eslint/unbound-method": "error",
    "@typescript-eslint/unified-signatures": "error",
    "@typescript-eslint/brace-style": ["error", "1tbs", { "allowSingleLine": true }],
    "@typescript-eslint/comma-dangle": [
      "error",
      {
        "arrays": "always-multiline",
        "objects": "always-multiline",
        "imports": "always-multiline",
        "exports": "always-multiline",
        "functions": "never",
        "enums": "always-multiline",
        "generics": "always-multiline",
        "tuples": "always-multiline"
      }
    ],
    "@typescript-eslint/comma-spacing": ["error", { "before": false, "after": true }],
    "@typescript-eslint/default-param-last": "error",
    "@typescript-eslint/dot-notation": "error",
    "@typescript-eslint/func-call-spacing": ["error", "never"],
    "@typescript-eslint/indent": ["error", 2, { "SwitchCase": 1 }],
    "@typescript-eslint/init-declarations": "off",
    "@typescript-eslint/keyword-spacing": ["error", { "before": true, "after": true }],
    "@typescript-eslint/lines-between-class-members": [
      "error",
      "always",
      { "exceptAfterSingleLine": true }
    ],
    "@typescript-eslint/no-array-constructor": "error",
    "@typescript-eslint/no-dupe-class-members": "error",
    "@typescript-eslint/no-duplicate-imports": "off",
    "@typescript-eslint/no-empty-function": [
      "error",
      { "allow": ["arrowFunctions", "functions", "methods"] }
    ],
    "@typescript-eslint/no-extra-parens": [
      "error",
      "all",
      {
        "conditionalAssign": true,
        "nestedBinaryExpressions": true,
        "returnAssign": false,
        "ignoreJSX": "multi-line",
        "enforceForArrowConditionals": true
      }
    ],
    "@typescript-eslint/no-extra-semi": "error",
    "@typescript-eslint/no-invalid-this": "off",
    "@typescript-eslint/no-loop-func": "error",
    "@typescript-eslint/no-loss-of-precision": "error",
    "@typescript-eslint/no-magic-numbers": "off",
    "@typescript-eslint/no-redeclare": "error",
    "@typescript-eslint/no-restricted-imports": "off",
    "@typescript-eslint/no-shadow": "error",
    "@typescript-eslint/no-unused-expressions": [
      "error",
      {
        "allowShortCircuit": true,
        "allowTernary": true,
        "allowTaggedTemplates": false
      }
    ],
    "@typescript-eslint/no-unused-vars": ["error", { "ignoreRestSiblings": true }],
    "@typescript-eslint/no-use-before-define": [
      "error",
      {
        "variables": false,
        "classes": false,
        "functions": false,
        "ignoreTypeReferences": false,
        "typedefs": false
      }
    ],
    "@typescript-eslint/space-infix-ops": ["error", { "int32Hint": false }],

    // prettier
    "curly": "error",
    "no-tabs": "error",
    "quotes": ["error", "single", { "avoidEscape": true, "allowTemplateLiterals": false }],
    "@typescript-eslint/quotes": [
      "error",
      "single",
      { "avoidEscape": true, "allowTemplateLiterals": false }
    ],

    // comments
    "eslint-comments/disable-enable-pair": ["error", { "allowWholeFile": true }],
    "eslint-comments/no-aggregating-enable": "error",
    "eslint-comments/no-duplicate-disable": "error",
    "eslint-comments/no-unlimited-disable": "error",
    "eslint-comments/no-unused-disable": "off",
    "eslint-comments/no-unused-enable": "error",

    // compat
    "compat/compat": "error",

    // es6
    "arrow-body-style": ["error", "as-needed", { "requireReturnForObjectLiteral": false }],
    "arrow-parens": ["error", "always"],
    "arrow-spacing": ["error", { "before": true, "after": true }],
    "constructor-super": "error",
    "generator-star-spacing": ["error", { "before": false, "after": true }],
    "no-class-assign": "error",
    "no-confusing-arrow": "off",
    "no-const-assign": "error",
    "no-dupe-class-members": "error",
    "no-duplicate-imports": "off",
    "no-new-symbol": "error",
    "no-restricted-exports": "off",
    "no-restricted-imports": "off",
    "no-this-before-super": "error",
    "no-useless-computed-key": "error",
    "no-useless-constructor": "error",
    "no-useless-rename": "error",
    "no-var": "error",
    "object-shorthand": [
      "error",
      "always",
      {
        "ignoreConstructors": false,
        "avoidQuotes": true
      }
    ],
    "prefer-arrow-callback": [
      "error",
      {
        "allowNamedFunctions": false,
        "allowUnboundThis": true
      }
    ],
    "prefer-const": [
      "error",
      {
        "destructuring": "any",
        "ignoreReadBeforeAssign": true
      }
    ],
    "prefer-destructuring": [
      "error",
      {
        "VariableDeclarator": {
          "array": false,
          "object": true
        },
        "AssignmentExpression": {
          "array": false,
          "object": false
        }
      },
      {
        "enforceForRenamedProperties": false
      }
    ],
    "prefer-numeric-literals": "error",
    "prefer-rest-params": "error",
    "prefer-spread": "error",
    "prefer-template": "off",
    "require-yield": "error",
    "rest-spread-spacing": ["error", "never"],
    "sort-imports": "off",
    "symbol-description": "error",
    "template-curly-spacing": ["error", "never"],
    "yield-star-spacing": ["error", { "before": false, "after": true }],

    // style
    "array-bracket-newline": "off",
    "array-bracket-spacing": ["error", "never"],
    "array-element-newline": "off",
    "block-spacing": ["error", "always"],
    "brace-style": ["error", "1tbs", { "allowSingleLine": true }],
    "camelcase": ["error", { "properties": "never" }],
    "capitalized-comments": "off",
    "comma-dangle": [
      "error",
      {
        "arrays": "always-multiline",
        "objects": "always-multiline",
        "imports": "always-multiline",
        "exports": "always-multiline",
        "functions": "never"
      }
    ],
    "comma-spacing": ["error", { "before": false, "after": true }],
    "comma-style": ["error", "last"],
    "computed-property-spacing": ["error", "never"],
    "consistent-this": "off",
    "eol-last": ["error", "always"],
    "func-call-spacing": ["error", "never"],
    "func-name-matching": "off",
    "func-names": "warn",
    "func-style": ["error", "declaration", { "allowArrowFunctions": true }],
    "function-call-argument-newline": ["error", "consistent"],
    "function-paren-newline": "off",
    "id-denylist": "off",
    "id-length": "off",
    "id-match": "off",
    "implicit-arrow-linebreak": "off",
    "indent": ["error", 2, { "SwitchCase": 1 }],
    "jsx-quotes": ["error", "prefer-double"],
    "key-spacing": ["error", { "beforeColon": false, "afterColon": true, "mode": "strict" }],
    "keyword-spacing": ["error", { "before": true, "after": true }],
    "line-comment-position": "off",
    "linebreak-style": "off",
    "lines-around-comment": "off",
    "lines-between-class-members": ["error", "always", { "exceptAfterSingleLine": true }],
    "max-depth": "off",
    "max-len": ["error", 120, 4, { "ignoreUrls": true, "ignoreRegExpLiterals": true }],
    "max-lines": "off",
    "max-lines-per-function": "off",
    "max-nested-callbacks": "off",
    "max-params": "off",
    "max-statements": "off",
    "max-statements-per-line": ["error", { "max": 1 }],
    "multiline-comment-style": "off",
    "multiline-ternary": ["error", "always-multiline"],
    "new-cap": [
      "error",
      {
        "newIsCap": true,
        "capIsNew": false,
        "capIsNewExceptions": ["Immutable.Map", "Immutable.Set", "Immutable.List"]
      }
    ],
    "new-parens": "error",
    "newline-per-chained-call": "off",
    "no-array-constructor": "error",
    "no-bitwise": "error",
    "no-continue": "error",
    "no-inline-comments": "off",
    "no-lonely-if": "error",
    "no-mixed-operators": "off",
    "no-mixed-spaces-and-tabs": "error",
    "no-multi-assign": "error",
    "no-multiple-empty-lines": ["error", { "max": 2, "maxEOF": 1 }],
    "no-negated-condition": "off",
    "no-nested-ternary": "error",
    "no-new-object": "error",
    "no-plusplus": "off",
    "no-restricted-syntax": [
      "error",
      {
        "selector": "LabeledStatement",
        "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain."
      },
      {
        "selector": "WithStatement",
        "message": "`with` is disallowed in strict mode."
      }
    ],
    "no-ternary": "off",
    "no-trailing-spaces": "error",
    "no-underscore-dangle": "off",
    "no-unneeded-ternary": "error",
    "no-whitespace-before-property": "error",
    "nonblock-statement-body-position": "off",
    "object-curly-newline": "off",
    "object-curly-spacing": ["error", "always"],
    "object-property-newline": "off",
    "one-var": ["error", "never"],
    "one-var-declaration-per-line": "off",
    "operator-assignment": ["error", "always"],
    "operator-linebreak": ["error", "after"],
    "padded-blocks": ["error", "never"],
    "padding-line-between-statements": "off",
    "prefer-exponentiation-operator": "error",
    "prefer-object-spread": "error",
    "quote-props": ["error", "consistent-as-needed", { "keywords": true }],
    "semi": ["error", "always"],
    "semi-spacing": ["error", { "before": false, "after": true }],
    "semi-style": "off",
    "sort-keys": "off",
    "sort-vars": "off",
    "space-before-blocks": ["error", "always"],
    "space-before-function-paren": [
      "error",
      { "anonymous": "always", "named": "never", "asyncArrow": "always" }
    ],
    "space-in-parens": ["error", "never"],
    "space-infix-ops": ["error", { "int32Hint": false }],
    "space-unary-ops": ["error", { "words": true, "nonwords": false }],
    "spaced-comment": ["error", "always"],
    "switch-colon-spacing": ["error", { "after": true, "before": false }],
    "template-tag-spacing": ["error", "never"],
    "unicode-bom": ["error", "never"],
    "wrap-regex": "off",

    // variables
    "init-declarations": "off",
    "no-delete-var": "error",
    "no-label-var": "error",
    "no-shadow": "error",
    "no-shadow-restricted-names": "error",
    "no-undef": "error",
    "no-undef-init": "error",
    "no-undefined": "off",
    "no-unused-vars": ["error", { "ignoreRestSiblings": true }],
    "no-use-before-define": ["error", { "variables": false, "classes": false, "functions": false }],

    // errors
    "for-direction": "error",
    "getter-return": "off",
    "no-async-promise-executor": "error",
    "no-await-in-loop": "error",
    "no-compare-neg-zero": "error",
    "no-cond-assign": ["error", "always"],
    "no-console": ["warn", { "allow": ["warn", "error"] }],
    "no-constant-condition": "error",
    "no-control-regex": "error",
    "no-debugger": "error",
    "no-dupe-args": "error",
    "no-dupe-else-if": "error",
    "no-dupe-keys": "error",
    "no-duplicate-case": "error",
    "no-empty": ["error", { "allowEmptyCatch": true }],
    "no-empty-character-class": "error",
    "no-ex-assign": "error",
    "no-extra-boolean-cast": "error",
    "no-extra-parens": [
      "error",
      "all",
      {
        "conditionalAssign": true,
        "nestedBinaryExpressions": true,
        "returnAssign": false,
        "ignoreJSX": "multi-line",
        "enforceForArrowConditionals": true
      }
    ],
    "no-extra-semi": "error",
    "no-func-assign": "error",
    "no-import-assign": "error",
    "no-inner-declarations": "error",
    "no-invalid-regexp": "error",
    "no-irregular-whitespace": "error",
    "no-loss-of-precision": "error",
    "no-misleading-character-class": "error",
    "no-obj-calls": "error",
    "no-promise-executor-return": "error",
    "no-prototype-builtins": "error",
    "no-regex-spaces": "error",
    "no-setter-return": "error",
    "no-sparse-arrays": "error",
    "no-template-curly-in-string": "error",
    "no-unexpected-multiline": "error",
    "no-unreachable": "error",
    "no-unreachable-loop": "error",
    "no-unsafe-finally": "error",
    "no-unsafe-negation": "error",
    "no-unsafe-optional-chaining": "off",
    "no-unused-private-class-members": "off",
    "no-useless-backreference": "error",
    "require-atomic-updates": "error",
    "use-isnan": "error",
    "valid-typeof": ["error", { "requireStringLiterals": true }],

    // strict
    "strict": ["error", "global"],

    // best practice
    "accessor-pairs": "off",
    "array-callback-return": "error",
    "block-scoped-var": "error",
    "class-methods-use-this": "error",
    "complexity": "off",
    "consistent-return": "error",
    "default-case": ["error", { "commentPattern": "^no default$" }],
    "default-case-last": "error",
    "default-param-last": "error",
    "dot-location": ["error", "property"],
    "dot-notation": "error",
    "eqeqeq": ["error", "always", { "null": "ignore" }],
    "grouped-accessor-pairs": "error",
    "guard-for-in": "error",
    "max-classes-per-file": ["error", 1],
    "no-alert": "error",
    "no-caller": "error",
    "no-case-declarations": "error",
    "no-constructor-return": "error",
    "no-div-regex": "error",
    "no-else-return": "error",
    "no-empty-function": ["error", { "allow": ["arrowFunctions", "functions", "methods"] }],
    "no-empty-pattern": "error",
    "no-eq-null": "off",
    "no-eval": "error",
    "no-extend-native": "error",
    "no-extra-bind": "error",
    "no-extra-label": "error",
    "no-fallthrough": "error",
    "no-floating-decimal": "error",
    "no-global-assign": "error",
    "no-implicit-coercion": "error",
    "no-implicit-globals": "error",
    "no-implied-eval": "error",
    "no-invalid-this": "off",
    "no-iterator": "error",
    "no-labels": "error",
    "no-lone-blocks": "error",
    "no-loop-func": "error",
    "no-magic-numbers": "off",
    "no-multi-spaces": "error",
    "no-multi-str": "error",
    "no-new": "error",
    "no-new-func": "error",
    "no-new-wrappers": "error",
    "no-nonoctal-decimal-escape": "error",
    "no-octal": "error",
    "no-octal-escape": "error",
    "no-param-reassign": "off",
    "no-proto": "error",
    "no-redeclare": "error",
    "no-restricted-properties": [
      "error",
      {
        "object": "arguments",
        "property": "callee",
        "message": "arguments.callee is deprecated"
      },
      {
        "property": "__defineGetter__",
        "message": "Please use Object.defineProperty instead."
      },
      {
        "property": "__defineSetter__",
        "message": "Please use Object.defineProperty instead."
      }
    ],
    "no-return-assign": ["error", "always"],
    "no-return-await": "error",
    "no-script-url": "error",
    "no-self-assign": "error",
    "no-self-compare": "error",
    "no-sequences": "error",
    "no-throw-literal": "error",
    "no-unmodified-loop-condition": "error",
    "no-unused-expressions": [
      "error",
      {
        "allowShortCircuit": true,
        "allowTernary": true,
        "allowTaggedTemplates": false
      }
    ],
    "no-unused-labels": "error",
    "no-useless-call": "error",
    "no-useless-catch": "error",
    "no-useless-concat": "error",
    "no-useless-escape": "error",
    "no-useless-return": "error",
    "no-void": "error",
    "no-warning-comments": "off",
    "no-with": "error",
    "prefer-named-capture-group": "off",
    "prefer-object-has-own": "off",
    "prefer-promise-reject-errors": ["error", { "allowEmptyReject": true }],
    "prefer-regex-literals": "error",
    "radix": "off",
    "require-await": "off",
    "require-unicode-regexp": "off",
    "vars-on-top": "off",
    "wrap-iife": ["error", "inside"],
    "yoda": "error",
    // Static analysis
    "import/no-unresolved": ["error", { "commonjs": true, "caseSensitive": true }],
    "import/named": "off",
    "import/default": "off",
    "import/namespace": "error",
    "import/no-restricted-paths": "off",
    "import/no-absolute-path": "error",
    "import/no-cycle": "error",
    "import/no-dynamic-require": "error",
    "import/no-internal-modules": "off",
    "import/no-relative-parent-imports": "off",
    "import/no-webpack-loader-syntax": "error",
    "import/no-self-import": "error",
    "import/no-unused-modules": "off",
    "import/no-relative-packages": "off",

    // Helpful warnings
    "import/export": "error",
    "import/no-named-as-default": "error",
    "import/no-named-as-default-member": "error",
    "import/no-deprecated": "off",
    "import/no-extraneous-dependencies": "off",
    "import/no-mutable-exports": "error",
    "import/no-useless-path-segments": "error",

    // Module systems
    "import/unambiguous": "off",
    "import/no-commonjs": "off",
    "import/no-amd": "error",
    "import/no-nodejs-modules": "off",
    "import/no-import-module-exports": "error",

    // Style guide
    "import/first": ["error", "absolute-first"],
    "import/no-duplicates": "error",
    "import/no-namespace": "off",
    "import/exports-last": "off",
    "import/extensions": ["error", "always", { "js": "never", "ts": "never", "tsx": "never" }],
    "import/order": [
      "error",
      {
        "alphabetize": {
          "order": "asc"
        },
        "groups": [["builtin", "external"], ["internal", "parent", "sibling"], "index"],
        "newlines-between": "always"
      }
    ],
    "import/newline-after-import": "error",
    "import/prefer-default-export": "off",
    "import/max-dependencies": "off",
    "import/no-unassigned-import": "off",
    "import/no-named-default": "error",
    "import/no-named-export": "off",
    "import/no-default-export": "off",
    "import/no-anonymous-default-export": "off",
    "import/group-exports": "off",
    "import/dynamic-import-chunkname": "error",

    // jest-formatting
    "jest-formatting/padding-around-all": "off",
    "jest-formatting/padding-around-after-all-blocks": "off",
    "jest-formatting/padding-around-after-each-blocks": "off",
    "jest-formatting/padding-around-before-all-blocks": "off",
    "jest-formatting/padding-around-before-each-blocks": "off",
    "jest-formatting/padding-around-describe-blocks": "off",
    "jest-formatting/padding-around-expect-groups": "off",
    "jest-formatting/padding-around-test-blocks": "off",

    // jest
    "jest/consistent-test-it": "off",
    "jest/expect-expect": "off",
    "jest/lowercase-name": "off",
    "jest/max-nested-describe": "off",
    "jest/no-alias-methods": "off",
    "jest/no-commented-out-tests": "off",
    "jest/no-conditional-expect": "off",
    "jest/no-deprecated-functions": "off",
    "jest/no-disabled-tests": "off",
    "jest/no-done-callback": "off",
    "jest/no-duplicate-hooks": "off",
    "jest/no-export": "off",
    "jest/no-focused-tests": "off",
    "jest/no-hooks": "off",
    "jest/no-identical-title": "off",
    "jest/no-if": "off",
    "jest/no-interpolation-in-snapshots": "off",
    "jest/no-jasmine-globals": "off",
    "jest/no-jest-import": "off",
    "jest/no-large-snapshots": "off",
    "jest/no-mocks-import": "off",
    "jest/no-restricted-matchers": "off",
    "jest/no-standalone-expect": "off",
    "jest/no-test-prefixes": "off",
    "jest/no-test-return-statement": "off",
    "jest/prefer-called-with": "off",
    "jest/prefer-expect-assertions": "off",
    "jest/prefer-expect-resolves": "off",
    "jest/prefer-hooks-on-top": "off",
    "jest/prefer-lowercase-title": "off",
    "jest/prefer-spy-on": "off",
    "jest/prefer-strict-equal": "off",
    "jest/prefer-to-be": "off",
    "jest/prefer-to-contain": "off",
    "jest/prefer-to-have-length": "off",
    "jest/prefer-todo": "off",
    "jest/require-hook": "off",
    "jest/require-to-throw-message": "off",
    "jest/require-top-level-describe": "off",
    "jest/valid-describe-callback": "off",
    "jest/valid-expect": "off",
    "jest/valid-expect-in-promise": "off",
    "jest/valid-title": "off",
    "jest/unbound-method": "off"
  },
  "overrides": [
    {
      "files": ["**/*.d.ts"],
      "rules": {
        "@typescript-eslint/naming-convention": "off",
        "max-classes-per-file": "off"
      }
    },
    {
      "files": ["**/__tests__/*"],
      "rules": {
        "jest-formatting/padding-around-after-all-blocks": "error",
        "jest-formatting/padding-around-after-each-blocks": "error",
        "jest-formatting/padding-around-before-all-blocks": "error",
        "jest-formatting/padding-around-before-each-blocks": "error",
        "jest-formatting/padding-around-describe-blocks": "error",
        "jest-formatting/padding-around-expect-groups": "error",
        "jest-formatting/padding-around-test-blocks": "error",
        "jest/consistent-test-it": ["error", { "fn": "test", "withinDescribe": "test" }],
        "jest/expect-expect": "error",
        "jest/no-alias-methods": "error",
        "jest/no-commented-out-tests": "error",
        "jest/no-conditional-expect": "error",
        "jest/no-deprecated-functions": "error",
        "jest/no-disabled-tests": "error",
        "jest/no-done-callback": "error",
        "jest/no-duplicate-hooks": "error",
        "jest/no-export": "error",
        "jest/no-focused-tests": "error",
        "jest/no-identical-title": "error",
        "jest/no-interpolation-in-snapshots": "error",
        "jest/no-jasmine-globals": "error",
        "jest/no-jest-import": "error",
        "jest/no-mocks-import": "error",
        "jest/no-standalone-expect": "error",
        "jest/no-test-return-statement": "error",
        "jest/prefer-called-with": "error",
        "jest/prefer-expect-assertions": ["error", { "onlyFunctionsWithAsyncKeyword": true }],
        "jest/prefer-expect-resolves": "error",
        "jest/prefer-hooks-on-top": "error",
        "jest/prefer-lowercase-title": "error",
        "jest/prefer-strict-equal": "error",
        "jest/prefer-to-be": "error",
        "jest/prefer-to-contain": "error",
        "jest/prefer-to-have-length": "error",
        "jest/prefer-todo": "error",
        "jest/require-hook": "error",
        "jest/require-top-level-describe": "error",
        "jest/valid-describe-callback": "error",
        "jest/valid-expect": ["error", { "alwaysAwait": true }],
        "jest/valid-expect-in-promise": "error",
        "jest/valid-title": "error",

        // typescript
        "@typescript-eslint/unbound-method": "off",
        "jest/unbound-method": "error"
      }
    }
  ]
}
